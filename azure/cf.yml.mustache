---
name: cf
director_uuid: {{bosh_director_uuid}}

meta:
  environment: cf
  releases:
  - name: cf
    version: latest

compilation:
  cloud_properties:
    instance_type: Standard_DS3_v2
    storage_account_name: {{storage_account_name}}
  network: cf1
  reuse_compilation_vms: true
  workers: 12

addons:
- name: networking
  jobs:
  - name: tcp_keepalive
    release: os-conf

releases:
- name: cf
  version: 231
- name: diego
  version: 0.1454.0
- name: etcd
  version: 36
- name: garden-linux
  version: 0.333.0

networks:
- name: cf1
  subnets:
  - cloud_properties:
      subnet_name: {{cf_subnet_name}}
      virtual_network_name: {{vnet_name}}
    dns: [ {{dns}} ]
    gateway: {{cf_gateway}}
    name: default_unused
    range: {{cf_subnet_range}}
    reserved: [ {{cf_reserved_range}} ]
    static: [ {{cf_static_range}} ]
  type: manual
- cloud_properties:
    tcp_endpoints:
    - 80:80
    - 443:443
    - 4443:4443
    - 2222:2222
  name: public
  type: vip

jobs:
- name: consul_z1
  instances: 1
  networks:
  - name: cf1
    static_ips: [ {{consul_ip}}  ]
  persistent_disk: 1024
  properties:
    consul:
      agent:
        mode: server
    metron_agent:
      zone: z1
  resource_pool: small_z1
  templates:
  - { name: consul_agent, release: cf }
  - { name: metron_agent, release: cf }
  update:
    max_in_flight: 1
    serial: true
- name: ha_proxy_z1
  instances: 1
  default_networks:
  - name: cf1
    static_ips:
  networks:
  - name: cf1
    default:
    - dns
    - gateway
  - name: public
    static_ips: [ {{haproxy_public_ip}} ]
  properties:
    ha_proxy:
      request_timeout_in_seconds: 900
      ssl_pem: *ha_proxy_ssl_pem
    metron_agent:
      zone: z1
    router:
      servers:
        z1: [ {{router_ip}} ]
  resource_pool: router_z1
  templates:
  - { name: haproxy, release: cf }
  - { name: metron_agent, release: cf }
  - { name: consul_agent, release: cf }
  update: {}
- name: nats_z1
  instances: 1
  networks:
  - name: cf1
    static_ips: [ {{nats_ip}} ]
  properties:
    metron_agent:
      zone: z1
  resource_pool: medium_z1
  templates:
  - { name: nats, release: cf }
  - { name: nats_stream_forwarder, release: cf }
  - { name: metron_agent, release: cf }
  update: {}
- name: etcd_z1
  instances: 1
  networks:
  - name: cf1
    static_ips: [ {{etcd_ip}} ]
  persistent_disk: 10024
  properties:
    metron_agent:
      zone: z1
  resource_pool: medium_z1
  templates:
  - { name: etcd, release: cf }
  - { name: etcd_metrics_server, release: cf }
  - { name: metron_agent, release: cf }
  update:
    max_in_flight: 1
- name: nfs_z1
  instances: 1
  networks:
  - name: cf1
    static_ips: [ {{nfs_ip}} ]
  persistent_disk: 102400
  properties:
    consul:
      agent:
        services:
          blobstore: {}
    metron_agent:
      zone: z1
    route_registrar:
      routes:
      - name: blobstore
        port: 80
        registration_interval: 20s
        tags:
          component: blobstore
        uris:
        - blobstore.{{system_domain}}
  resource_pool: medium_z1
  templates:
  - { name: consul_agent, release: cf }
  - { name: debian_nfs_server, release: cf }
  - { name: metron_agent, release: cf }
  - { name: route_registrar, release: cf }
  update: {}
- name: uaa_z1
  instances: 1
  networks:
  - name: cf1
  properties:
    consul:
      agent:
        services:
          uaa: {}
    metron_agent:
      zone: z1
    route_registrar:
      routes:
      - name: uaa
        port: 8080
        registration_interval: 20s
        tags:
          component: uaa
        uris:
        - uaa.{{system_domain}}
        - "*.uaa.{{system_domain}}"
        - login.{{system_domain}}
        - "*.login.{{system_domain}}"
    uaa:
      proxy:
        servers: [ {{router_ip}} ]
  resource_pool: medium_z1
  templates:
  - { name: uaa, release: cf }
  - { name: metron_agent, release: cf }
  - { name: consul_agent, release: cf }
  - { name: route_registrar, release: cf }
  - { name: statsd-injector, release: cf }
  update: {}
- name: api_z1
  instances: 1
  networks:
  - name: cf1
  persistent_disk: 0
  properties:
    consul:
      agent:
        services:
          cloud_controller_ng: {}
    metron_agent:
      zone: z1
    nfs_server:
      address: {{nfs_ip}}
      allow_from_entries: [ {{cf_subnet_range}} ]
      share:
    route_registrar:
      routes:
      - name: api
        port: 9022
        registration_interval: 20s
        tags:
          component: CloudController
        uris:
        - api.{{system_domain}}
  resource_pool: large_z1
  templates:
  - { name: consul_agent, release: cf }
  - { name: go-buildpack, release: cf }
  - { name: binary-buildpack, release: cf }
  - { name: nodejs-buildpack, release: cf }
  - { name: ruby-buildpack, release: cf }
  - { name: php-buildpack, release: cf }
  - { name: python-buildpack, release: cf }
  - { name: staticfile-buildpack, release: cf }
  - { name: cloud_controller_ng, release: cf }
  - { name: metron_agent, release: cf }
  - { name: statsd-injector, release: cf }
  - { name: nfs_mounter, release: cf }
  - { name: route_registrar, release: cf }
  update: {}
- name: clock_global
  instances: 1
  networks:
  - name: cf1
  persistent_disk: 0
  properties:
    metron_agent:
      zone: z1
  resource_pool: medium_z1
  templates:
  - { name: cloud_controller_clock, release: cf }
  - { name: metron_agent, release: cf }
  update: {}
- name: api_worker_z1
  instances: 1
  networks:
  - name: cf1
  persistent_disk: 0
  properties:
    metron_agent:
      zone: z1
    nfs_server:
      address: {{nfs_ip}}
      allow_from_entries: [ {{cf_subnet_range}} ]
      share:
  resource_pool: small_z1
  templates:
  - { name: consul_agent, release: cf }
  - { name: nfs_mounter, release: cf }
  - { name: cloud_controller_worker, release: cf }
  - { name: metron_agent, release: cf }
  update: {}
- name: doppler_z1
  instances: 1
  networks:
  - name: cf1
  properties:
    doppler:
      zone: z1
    metron_agent:
      zone: z1
  resource_pool: medium_z1
  templates:
  - { name: doppler, release: cf }
  - { name: syslog_drain_binder, release: cf }
  - { name: metron_agent, release: cf }
  update: {}
- name: loggregator_trafficcontroller_z1
  instances: 1
  networks:
  - name: cf1
  properties:
    metron_agent:
      zone: z1
    route_registrar:
      routes:
      - name: doppler
        port: 8081
        registration_interval: 20s
        uris:
        - doppler.{{system_domain}}
      - name: loggregator
        port: 8080
        registration_interval: 20s
        uris:
        - loggregator.{{system_domain}}
    traffic_controller:
      zone: z1
  resource_pool: small_z1
  templates:
  - { name: loggregator_trafficcontroller, release: cf }
  - { name: metron_agent, release: cf }
  - { name: route_registrar, release: cf }
  update: {}
- name: router_z1
  instances: 1
  default_networks:
  - name: cf1
    static_ips:
  networks:
  - name: cf1
    static_ips: [ {{router_ip}} ]
  properties:
    consul:
      agent:
        services:
          gorouter: {}
    metron_agent:
      zone: z1
  resource_pool: router_z1
  templates:
  - { name: consul_agent, release: cf }
  - { name: gorouter, release: cf }
  - { name: metron_agent, release: cf }
  update: {}
- name: acceptance_tests
  instances: 1
  lifecycle: errand
  networks:
  - name: cf1
  resource_pool: small_errand
  templates:
  - name: acceptance-tests
    release: cf
- name: smoke_tests
  instances: 1
  lifecycle: errand
  networks:
  - name: cf1
  properties: {}
  resource_pool: small_errand
  templates:
  - name: smoke-tests
    release: cf
- name: login_ha_proxy_z1
  instances: 1
  default_networks:
  - name: cf1
    static_ips:
  networks:
  - default:
    - dns
    - gateway
    name: cf1
  - name: public
    static_ips: [ {{login_haproxy_public_ip}} ]
  properties:
    ha_proxy:
      ssl_pem: *loginha_proxy_ssl_pem
    metron_agent:
      zone: z1
    router:
      servers:
        z1: [ {{router_ip}} ]
  resource_pool: router_z1
  templates:
  - { name: haproxy, release: cf }
  - { name: metron_agent, release: cf }
  - { name: consul_agent, release: cf }

properties:
  acceptance_tests:
    admin_password: {{cf_api_password}}
    admin_user: admin
    api: https://api.{{system_domain}}
    apps_domain: {{system_domain}}
    include_diego: true
    nodes: 2
    skip_diego_unsupported_tests: true
    skip_ssl_validation: true
  app_domains:
  - {{system_domain}}
  app_ssh:
    host_key_fingerprint: 8d:b5:92:7d:2c:c2:77:a8:c2:38:eb:6e:21:e4:a8:ed
    oauth_client_id: ssh-proxy
  blobstore:
    admin_users:
    port: 80
    secure_link:
      secret:
  cc:
    allow_app_ssh_access: true
    allowed_cors_domains: []
    app_events:
      cutoff_age_in_days: 31
    app_usage_events:
      cutoff_age_in_days: 31
    audit_events:
      cutoff_age_in_days: 31
    broker_client_default_async_poll_interval_seconds:
    broker_client_max_async_poll_duration_minutes:
    broker_client_timeout_seconds: 70
    buildpacks:
      blobstore_type: fog
      buildpack_directory_key: {{system_domain}}-cc-buildpacks
      cdn:
      fog_connection:
      webdav_config:
        password:
        private_endpoint: http://blobstore.service.cf.internal
        public_endpoint: http://blobstore.{{system_domain}}
        secret:
        username:
    bulk_api_password: {{bulk_api_password}}
    client_max_body_size: 15M
    db_encryption_key: {{ccdb_encryption_key}}
    db_logging_level: debug2
    default_app_disk_in_mb: 1024
    default_app_memory: 1024
    default_buildpacks:
    - { name: staticfile_buildpack, package: staticfile-buildpack }
    - { name: java_buildpack, package: buildpack_java }
    - { name: ruby_buildpack, package: ruby-buildpack }
    - { name: nodejs_buildpack, package: nodejs-buildpack }
    - { name: go_buildpack, package: go-buildpack }
    - { name: python_buildpack, package: python-buildpack }
    - { name: php_buildpack, package: php-buildpack }
    - { name: binary_buildpack, package: binary-buildpack }
    default_health_check_timeout: 60
    default_quota_definition: default
    default_running_security_groups:
    - all_open
    default_staging_security_groups:
    - all_open
    default_to_diego_backend: true
    development_mode: false
    directories:
    disable_custom_buildpacks: false
    droplets:
      blobstore_type: fog
      cdn:
      droplet_directory_key: {{system_domain}}-cc-droplets
      fog_connection:
      max_staged_droplets_stored:
      webdav_config:
        password:
        private_endpoint: http://blobstore.service.cf.internal
        public_endpoint: http://blobstore.{{system_domain}}
        secret:
        username:
    external_host: api
    external_port: 9022
    external_protocol:
    install_buildpacks:
    - { name: staticfile_buildpack, package: staticfile-buildpack }
    - { name: java_buildpack, package: buildpack_java }
    - { name: ruby_buildpack, package: ruby-buildpack }
    - { name: nodejs_buildpack, package: nodejs-buildpack }
    - { name: go_buildpack, package: go-buildpack }
    - { name: python_buildpack, package: python-buildpack }
    - { name: php_buildpack, package: php-buildpack }
    - { name: binary_buildpack, package: binary-buildpack }
    internal_api_password: {{bulk_api_password}}
    internal_api_user: internal_user
    jobs:
      app_bits_packer:
        timeout_in_seconds:
      app_events_cleanup:
        timeout_in_seconds:
      app_usage_events_cleanup:
        timeout_in_seconds:
      blobstore_delete:
        timeout_in_seconds:
      blobstore_upload:
        timeout_in_seconds:
      droplet_deletion:
        timeout_in_seconds:
      droplet_upload:
        timeout_in_seconds:
      generic:
        number_of_workers:
      global:
        timeout_in_seconds: 14400
      model_deletion:
        timeout_in_seconds:
    logging_level: debug2
    maximum_app_disk_in_mb: 2048
    maximum_health_check_timeout: 600
    min_cli_version:
    min_recommended_cli_version:
    newrelic:
      capture_params: false
      developer_mode: false
      environment_name: cf
      license_key: somethingnonesense
      monitor_mode: true
      transaction_tracer:
        enabled: true
        record_sql: obfuscated
    packages:
      app_package_directory_key: {{system_domain}}-cc-packages
      blobstore_type: fog
      cdn:
      fog_connection:
      max_package_size: 1073741824
      max_valid_packages_stored:
      webdav_config:
        password:
        private_endpoint: http://blobstore.service.cf.internal
        public_endpoint: http://blobstore.{{system_domain}}
        secret:
        username:
    quota_definitions:
      default:
        memory_limit: 10240
        non_basic_services_allowed: true
        total_routes: 1000
        total_services: 100
      runaway:
        memory_limit: 153600
        non_basic_services_allowed: true
        total_routes: 1000
        total_services: -1
    resource_pool:
      blobstore_type: fog
      cdn:
      fog_connection:
      resource_directory_key: {{system_domain}}-cc-resources
      webdav_config:
        password:
        private_endpoint: http://blobstore.service.cf.internal
        public_endpoint: http://blobstore.{{system_domain}}
        secret:
        username:
    security_group_definitions:
    - name: all_open
      rules:
      - protocol: all
        destination: 0.0.0.0-255.255.255.255
    - name: public_networks
      rules:
      - destination: 0.0.0.0-9.255.255.255
        protocol: all
      - destination: 11.0.0.0-169.253.255.255
        protocol: all
      - destination: 169.255.0.0-172.15.255.255
        protocol: all
      - destination: 172.32.0.0-192.167.255.255
        protocol: all
      - destination: 192.169.0.0-255.255.255.255
        protocol: all
    - name: dns
      rules:
      - destination: 0.0.0.0/0
        ports: '53'
        protocol: tcp
      - destination: 0.0.0.0/0
        ports: '53'
        protocol: udp
    - name: custom_rules
      rules:
      - destination: {{mysql_subnet_range}}
        ports: '3306'
        protocol: tcp
    service_usage_events:
      cutoff_age_in_days: 31
    srv_api_uri: https://api.{{system_domain}}
    stacks:
    staging_upload_password: m310RLMOnyfkjKzHqg9Y8S4bd6BtQpPT
    staging_upload_user: staging
    system_buildpacks:
    - { name: staticfile_buildpack, package: staticfile-buildpack }
    - { name: java_buildpack, package: buildpack_java }
    - { name: ruby_buildpack, package: ruby-buildpack }
    - { name: nodejs_buildpack, package: nodejs-buildpack }
    - { name: go_buildpack, package: go-buildpack }
    - { name: python_buildpack, package: python-buildpack }
    - { name: php_buildpack, package: php-buildpack }
    - { name: binary_buildpack, package: binary-buildpack }
    thresholds:
      api:
        alert_if_above_mb:
        restart_if_above_mb:
        restart_if_consistently_above_mb:
      worker:
        alert_if_above_mb:
        restart_if_above_mb:
        restart_if_consistently_above_mb:
    user_buildpacks: []
    users_can_select_backend: true
    webdav_config:
      password:
      private_endpoint: http://blobstore.service.cf.internal
      public_endpoint: http://blobstore.{{system_domain}}
      secret:
      username:
  ccdb:
    address: {{mysql_proxy_ip}}
    databases:
    - citext: true
      name: ccdb
      tag: cc
    db_scheme: mysql2
    port: 3306
    roles:
    - name: ccadmin
      password: {{ccdb_password}}
      tag: admin
  collector:
  consul:
    agent:
      log_level:
      servers:
        lan: [ {{consul_ip}} ]
    agent_cert:
    agent_key:
    ca_cert:
    encrypt_keys: []
    require_ssl: false
    server_cert:
    server_key:
  databases:
    additional_config:
    address: ''
    collect_statement_statistics:
    databases:
    - citext: true
      name: ccdb
      tag: cc
    - citext: true
      name: uaadb
      tag: uaa
    db_scheme: postgres
    port: 5524
    roles:
    - name: ccadmin
      password: {{ccadmin_password}}
      tag: admin
    - name: uaaadmin
      password: {{uaadb_password}}
      tag: admin
  dea_next:
    advertise_interval_in_seconds: 5
    allow_host_access:
    allow_networks: []
    default_health_check_timeout: 60
    deny_networks: []
    directory_server_protocol: https
    disk_mb:
    disk_overcommit_factor:
    evacuation_bail_out_time_in_seconds: 600
    heartbeat_interval_in_seconds: 10
    instance_bandwidth_limit:
    instance_disk_inode_limit: 200000
    kernel_network_tuning_enabled: true
    logging_level: debug
    memory_mb:
    memory_overcommit_factor:
    mtu:
    post_setup_hook:
    rlimit_core: 0
    staging_bandwidth_limit:
    staging_disk_inode_limit: 200000
    staging_disk_limit_mb: 6144
    staging_memory_limit_mb: 1024
  description:
  disk_quota_enabled: true
  domain: {{system_domain}}
  doppler:
    blacklisted_syslog_ranges:
    debug: false
    maxRetainedLogMessages: 100
    message_drain_buffer_size:
    port: 4443
    tls:
      enable:
      port:
      server_cert:
      server_key:
    unmarshaller_count: 5
    zone:
  doppler_endpoint:
    shared_secret: {{doppler_shared_secret}}
  dropsonde:
    enabled: true
  etcd:
    machines: [ {{etcd_ip}} ]
    peer_require_ssl: false
    require_ssl: false
  etcd_metrics_server:
    nats:
      machines: [ {{nats_ip}} ]
      password: 8dwHMry7IbkQf6ATp1SanZBXWOquJKx5
      username: nats
  ha_proxy:
  hm9000:
    port: 5155
    url: https://hm9000.{{system_domain}}
  logger_endpoint:
  loggregator:
    blacklisted_syslog_ranges:
    debug: false
    etcd:
      machines: [ {{etcd_ip}} ]
    maxRetainedLogMessages: 100
    outgoing_dropsonde_port: 8081
    tls:
      ca_cert:
  loggregator_endpoint:
    shared_secret: {{doppler_shared_secret}}
  login:
    analytics:
      code:
      domain:
    asset_base_url: "/resources/pivotal"
    brand: Pivotal
    catalina_opts:
    enabled: true
    invitations_enabled:
    links:
      passwd: https://console.{{system_domain}}/password_resets/new
      signup: https://console.{{system_domain}}/register
    logout:
      redirect:
        parameter:
          disable: false
    messages:
    notifications:
      url:
    protocol:
    restricted_ips_regex:
    saml:
    self_service_links_enabled:
    signups_enabled:
    smtp:
      host:
      password:
      port:
      user:
    spring_profiles:
    tiles:
    - image: "/resources/pivotal/images/pws-logo-gray.png"
      image-hover: "/resources/pivotal/images/pws-logo-teal.png"
      login-link: https://console.{{system_domain}}
      name: Pivotal Web Services
      signup-link: https://console.{{system_domain}}/register
    uaa_base:
    url:
  metron_agent:
    buffer_size:
    deployment: cf
    enable_buffer:
    preferred_protocol:
    tls:
      client_cert:
      client_key:
  metron_endpoint:
    shared_secret: {{doppler_shared_secret}}
  nats:
    debug: false
    machines: [ {{nats_ip}} ]
    monitor_port: 0
    password: {{nats_password}}
    port: 4222
    prof_port: 0
    trace: false
    user: nats
  nfs_server:
    address: {{nfs_ip}}
    allow_from_entries: [ {{cf_subnet_range}} ]
    share:
  request_timeout_in_seconds: 900
  router:
    cipher_suites:
    debug_addr:
    drain_wait:
    enable_routing_api:
    enable_ssl:
    extra_headers_to_log:
    logrotate:
    port:
    requested_route_registration_interval_in_seconds:
    route_services_recommend_https:
    route_services_secret:
    route_services_secret_decrypt_only:
    route_services_timeout:
    secure_cookies:
    ssl_cert:
    ssl_key:
    ssl_skip_validation: true
    status:
      password: {{router_password}}
      port:
      user: router
  smoke_tests:
    api: api.{{system_domain}}
    apps_domain:
    - {{system_domain}}
    org: runtime-smoke-tests
    password: {{smoketests_password}}
    space: runtime-smoke-tests
    use_existing_org: true
    user: runtime-smoke-tests
    skip_ssl_validation: true
  ssl:
    skip_cert_verify: true
  support_address: http://support.cloudfoundry.com
  syslog_daemon_config:
    address:
    port:
  system_domain: {{system_domain}}
  system_domain_organization: system
  traffic_controller:
    disable_access_control:
    outgoing_port: 8080
    zone:
  uaa:
    admin:
      client_secret: {{uaa_client_secret}}
    authentication:
      policy:
        countFailuresWithinSeconds:
        lockoutAfterFailures:
        lockoutPeriodSeconds:
    catalina_opts: "-Xmx768m -XX:MaxPermSize=256m"
    cc:
      client_secret: {{cc_client_secret}}
    clients:
      cc-service-dashboards:
        authorities: clients.read,clients.write,clients.admin
        authorized-grant-types: client_credentials
        scope: openid,cloud_controller_service_permissions.read
        secret: {{uaa_cc_service_dashboard_secret}}
      cc_routing:
        authorities: routing.router_groups.read
        authorized-grant-types: client_credentials
        secret: {{uaa_cc_routing_secret}}
      cf:
        access-token-validity: 600
        authorities: uaa.none
        authorized-grant-types: implicit,password,refresh_token
        autoapprove: true
        override: true
        refresh-token-validity: 2592000
        scope: cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose,uaa.user,routing.router_groups.read
      cloud_controller_username_lookup:
        authorities: scim.userids
        authorized-grant-types: client_credentials
        secret: {{uaa_cc_username_lookup_secret}}
      datadog-firehose-nozzle:
        access-token-validity: 1209600
        authorities: oauth.login,doppler.firehose
        authorized-grant-types: authorization_code,client_credentials,refresh_token
        override: true
        scope: openid,oauth.approvals,doppler.firehose
        secret: {{uaa_datadog_firehoze_nozzle_secret}}
      doppler:
        authorities: uaa.resource
        override: true
        secret: {{uaa_doppler_secret}}
      gorouter:
        authorities: routing.routes.read
        authorized-grant-types: client_credentials,refresh_token
        secret: {{uaa_gorouter_secret}}
      identity:
        access-token-validity: 1209600
        authorities: scim.zones,zones.read,uaa.resource,zones.write,cloud_controller.admin
        authorized-grant-types: authorization_code,client_credentials,refresh_token
        autoapprove: true
        override: true
        redirect-uri: https://p-identity.{{system_domain}}/dashboard/,https://p-identity.{{system_domain}}/dashboard/*
        refresh-token-validity: 1209600
        resource_ids: none
        scope: cloud_controller.admin,cloud_controller.read,cloud_controller.write,openid,zones.*.*,zones.*.*.*,zones.read,zones.write
        secret: {{uaa_identity_secret}}
      login:
        authorities: oauth.login,scim.write,clients.read,notifications.write,critical_notifications.write,emails.write,scim.userids,password.write
        authorized-grant-types: authorization_code,client_credentials,refresh_token
        autoapprove: true
        override: true
        redirect-uri: https://login.{{system_domain}}
        scope: openid,oauth.approvals
        secret: {{uaa_login_secret}}
      notifications:
        authorities: cloud_controller.admin,scim.read
        authorized-grant-types: client_credentials
        secret: {{uaa_notifications_secret}}
      portal:
        access-token-validity: 1209600
        authorities: scim.write,scim.read,cloud_controller.read,cloud_controller.write,password.write,uaa.admin,uaa.resource,cloud_controller.admin,emails.write,notifications.write
        authorized-grant-types: authorization_code,client_credentials,password,implicit
        autoapprove: true
        id: portal
        override: true
        refresh-token-validity: 1209600
        scope: openid,cloud_controller.read,cloud_controller.write,password.write,console.admin,console.support,cloud_controller.admin
        secret: {{uaa_portal_secret}}
      ssh-proxy:
        authorized-grant-types: authorization_code
        autoapprove: true
        override: true
        redirect-uri: "/login"
        scope: openid,cloud_controller.read,cloud_controller.write
        secret: {{uaa_ssh_proxy_secret}}
      tcp_emitter:
        authorities: routing.routes.write,routing.routes.read
        authorized-grant-types: client_credentials,refresh_token
        secret: {{uaa_tcp_emitter_secret}}
      tcp_router:
        authorities: routing.routes.read
        authorized-grant-types: client_credentials,refresh_token
        secret: {{uaa_tcp_router_secret}}
    database:
    issuer: https://uaa.{{system_domain}}
    jwt:
      signing_key: *jwt_signing_key
      verification_key: *jwt_verification_key
    ldap:
    login:
    newrelic:
      production:
        app_name: UAA cf
        attributes:
          enabled: true
          exclude: request.parameters.password,request.parameters.client_secret
          include: request.parameters.*
        error_collector:
          ignore_errors: akka.actor.ActorKilledException
        high_security: false
        license_key: somethingnonesense
    no_ssl:
    port: 8080
    require_https:
    restricted_ips_regex: 10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3}|169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}
    scim:
      external_groups:
      groups:
      userids_enabled: true
      users:
      - admin|{{cf_api_password}}|scim.write,scim.read,openid,cloud_controller.admin,clients.read,clients.write,doppler.firehose,zones.read,zones.write
    spring_profiles:
    ssl:
      port: -1
    url: https://uaa.{{system_domain}}
    user:
    zones:
  uaadb:
    address: {{mysql_proxy_ip}}
    databases:
    - citext: true
      name: uaadb
      tag: uaa
    db_scheme: mysql
    port: 3306
    roles:
    - name: uaaadmin
      password: {{uaadb_password}}
      tag: admin

resource_pools:
- cloud_properties:
    instance_type: Standard_DS1_v2
    storage_account_name: {{storage_account_name}}
  env:
    bosh:
      password: "$6$4gDD3aV0rdqlrKC$2axHCxGKIObs6tAmMTqYCspcdvQXh3JJcvWOY2WGb4SrdXtnCyNaWlrf3WEqvYR2MYizEGp3kMmbpwBC6jsHt0"
  name: small_z1
  network: cf1
  stemcell:
    name: bosh-azure-hyperv-ubuntu-trusty-go_agent
    version: latest
- cloud_properties:
    instance_type: Standard_DS1_v2
    storage_account_name: {{storage_account_name}}
  env:
    bosh:
      password: "$6$4gDD3aV0rdqlrKC$2axHCxGKIObs6tAmMTqYCspcdvQXh3JJcvWOY2WGb4SrdXtnCyNaWlrf3WEqvYR2MYizEGp3kMmbpwBC6jsHt0"
  name: medium_z1
  network: cf1
  stemcell:
    name: bosh-azure-hyperv-ubuntu-trusty-go_agent
    version: latest
- cloud_properties:
    instance_type: Standard_DS1_v2
    storage_account_name: {{storage_account_name}}
  env:
    bosh:
      password: "$6$4gDD3aV0rdqlrKC$2axHCxGKIObs6tAmMTqYCspcdvQXh3JJcvWOY2WGb4SrdXtnCyNaWlrf3WEqvYR2MYizEGp3kMmbpwBC6jsHt0"
  name: large_z1
  network: cf1
  stemcell:
    name: bosh-azure-hyperv-ubuntu-trusty-go_agent
    version: latest
- cloud_properties:
    instance_type: Standard_DS4_v2
    storage_account_name: {{storage_account_name}}
  env:
    bosh:
      password: "$6$4gDD3aV0rdqlrKC$2axHCxGKIObs6tAmMTqYCspcdvQXh3JJcvWOY2WGb4SrdXtnCyNaWlrf3WEqvYR2MYizEGp3kMmbpwBC6jsHt0"
  name: runner_z1
  network: cf1
  stemcell:
    name: bosh-azure-hyperv-ubuntu-trusty-go_agent
    version: latest
- cloud_properties:
    instance_type: Standard_DS1_v2
    storage_account_name: {{storage_account_name}}
  env:
    bosh:
      password: "$6$4gDD3aV0rdqlrKC$2axHCxGKIObs6tAmMTqYCspcdvQXh3JJcvWOY2WGb4SrdXtnCyNaWlrf3WEqvYR2MYizEGp3kMmbpwBC6jsHt0"
  name: router_z1
  network: cf1
  stemcell:
    name: bosh-azure-hyperv-ubuntu-trusty-go_agent
    version: latest
- cloud_properties:
    instance_type: Standard_DS1_v2
    storage_account_name: {{storage_account_name}}
  env:
    bosh:
      password: "$6$4gDD3aV0rdqlrKC$2axHCxGKIObs6tAmMTqYCspcdvQXh3JJcvWOY2WGb4SrdXtnCyNaWlrf3WEqvYR2MYizEGp3kMmbpwBC6jsHt0"
  name: small_errand
  network: cf1
  stemcell:
    name: bosh-azure-hyperv-ubuntu-trusty-go_agent
    version: latest
- cloud_properties:
    instance_type: Standard_DS1_v2
    storage_account_name: {{storage_account_name}}
  env:
    bosh:
      password: "$6$4gDD3aV0rdqlrKC$2axHCxGKIObs6tAmMTqYCspcdvQXh3JJcvWOY2WGb4SrdXtnCyNaWlrf3WEqvYR2MYizEGp3kMmbpwBC6jsHt0"
  name: xlarge_errand
  network: cf1
  stemcell:
    name: bosh-azure-hyperv-ubuntu-trusty-go_agent
    version: latest

update:
  canaries: 1
  canary_watch_time: 30000-600000
  max_in_flight: 1
  serial: true
  update_watch_time: 5000-600000
